#!/bin/bash

# A script to manage isolated development environments with OrbStack
set -e 

SETUP_DIR="$HOME/.dev-envs/setups"

# --- Helper Functions ---
function usage() {
  echo "Usage: $(basename "$0") <command> <environment>"
  echo ""
  echo "Commands:"
  echo "  new      Creates and provisions a new environment VM"
  echo "  up       Starts an existing environment VM and connects"
  echo "  down     Stops a running environment VM"
  echo "  rm       Deletes an environment VM permanently"
  echo ""
  echo "Available Environments:"
  if [ -d "$SETUP_DIR" ]; then
    ls -1 "$SETUP_DIR" | grep -v '\.backup\.' | sed 's/\..*$//' | sort -u | sed 's/^/  /'
  else
    echo "  (No environments found - run installer first)"
  fi
  exit 1
}

# --- Main Logic ---
COMMAND=$1
ENV_NAME=$2
VM_NAME="dev-vm-${ENV_NAME}"
# Find the setup file, regardless of its extension.
SETUP_FILE=$(find "$SETUP_DIR" -type f -name "${ENV_NAME}.*" | head -n 1)

if [ -z "$COMMAND" ] || [ -z "$ENV_NAME" ]; then
  usage
fi

if [[ "$COMMAND" != "new" ]] && [[ "$COMMAND" != "up" ]] && [[ "$COMMAND" != "down" ]] && [[ "$COMMAND" != "rm" ]]; then
    echo "Error: Invalid command '$COMMAND'."
    usage
fi

case $COMMAND in
  new)
    echo "üöÄ Creating and provisioning '$ENV_NAME' using cloud-init..."
    if [ ! -f "$SETUP_FILE" ]; then
      echo "‚ùå Error: Setup file for '$ENV_NAME' not found in $SETUP_DIR"
      exit 1
    fi

    orb create --user-data "$SETUP_FILE" ubuntu "$VM_NAME"

    echo "‚úÖ Environment '$ENV_NAME' is ready. Connecting..."
    orb -m "$VM_NAME"
    ;;

  up)
    echo "üöÄ Starting environment '$ENV_NAME' and connecting..."
    orb -m "$VM_NAME"
    ;;

  down)
    echo "üõë Stopping environment '$ENV_NAME'..."
    orb stop "$VM_NAME"
    echo "‚úÖ VM '$VM_NAME' stopped."
    ;;

  rm)
    echo "üî• Deleting environment '$ENV_NAME'..."
    read -p "Are you sure you want to permanently delete VM '$VM_NAME'? (y/n) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
      orb delete "$VM_NAME"
      echo "‚úÖ VM '$VM_NAME' deleted."
    else
      echo "Deletion cancelled."
    fi
    ;;
esac
